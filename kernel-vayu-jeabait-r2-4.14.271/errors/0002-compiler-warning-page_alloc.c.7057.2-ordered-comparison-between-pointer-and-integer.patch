From 5fe89b73fa16e80946f6147f11d7754ee596d1a0 Mon Sep 17 00:00:00 2001
From: berbascum <berbascum@ticv.cat>
Date: Sun, 1 Sep 2024 11:52:38 +0200
Subject: [PATCH] (compiler) warning: page_alloc.c:7057:2 ordered comparison between pointer and integer
 pointer and integer

Fix: Convert ptrs to integers befor comparison

Warnings:
/buildd/sources/mm/page_alloc.c:7057:2: warning: ordered comparison between pointer and integer ('char' and 'char *')
        adj_init_size(__init_begin[0], __init_end, init_data_size,
        ^                              ~~~~~~~~~~
/buildd/sources/mm/page_alloc.c:7053:27: note: expanded from macro 'adj_init_size'
                if (start <= pos && pos < end && size > adj) \
                                    ~~~ ^ ~~~
/buildd/sources/mm/page_alloc.c:7059:2: warning: ordered comparison between pointer and integer ('char' and 'char *')
        adj_init_size(_stext[0], _etext, codesize, _sinittext[0], init_code_size);
        ^                        ~~~~~~            ~~~~~~~~~~~~~
/buildd/sources/mm/page_alloc.c:7053:27: note: expanded from macro 'adj_init_size'
                if (start <= pos && pos < end && size > adj) \
                                    ~~~ ^ ~~~
/buildd/sources/mm/page_alloc.c:7060:2: warning: ordered comparison between pointer and integer ('char' and 'char *')
        adj_init_size(_sdata[0], _edata, datasize, __init_begin[0], init_data_size);
        ^                        ~~~~~~            ~~~~~~~~~~~~~~~
/buildd/sources/mm/page_alloc.c:7053:27: note: expanded from macro 'adj_init_size'
                if (start <= pos && pos < end && size > adj) \
                                    ~~~ ^ ~~~
/buildd/sources/mm/page_alloc.c:7061:2: warning: ordered comparison between pointer and integer ('char' and 'char *')
        adj_init_size(_stext[0], _etext, codesize, __start_rodata[0], rosize);
        ^                        ~~~~~~            ~~~~~~~~~~~~~~~~~
/buildd/sources/mm/page_alloc.c:7053:27: note: expanded from macro 'adj_init_size'
                if (start <= pos && pos < end && size > adj) \
                                    ~~~ ^ ~~~
/buildd/sources/mm/page_alloc.c:7062:2: warning: ordered comparison between pointer and integer ('char' and 'char *')
        adj_init_size(_sdata[0], _edata, datasize, __start_rodata[0], rosize);
        ^                        ~~~~~~            ~~~~~~~~~~~~~~~~~
/buildd/sources/mm/page_alloc.c:7053:27: note: expanded from macro 'adj_init_size'
                if (start <= pos && pos < end && size > adj) \
                                    ~~~ ^ ~~~
---
 mm/page_alloc.c | 29 ++++++++++++++++-------------
 1 file changed, 16 insertions(+), 13 deletions(-)

diff --git a/mm/page_alloc.c b/mm/page_alloc.c
index 2529854ca403..5b038c87aa1e 100644
--- a/mm/page_alloc.c
+++ b/mm/page_alloc.c
@@ -7048,20 +7048,23 @@ void __init mem_init_print_info(const char *str)
 	 *    please refer to arch/tile/kernel/vmlinux.lds.S.
 	 * 3) .rodata.* may be embedded into .text or .data sections.
 	 */
+
 #define adj_init_size(start, end, size, pos, adj) \
-	do { \
-		if (start <= pos && pos < end && size > adj) \
-			size -= adj; \
-	} while (0)
-
-	adj_init_size(__init_begin[0], __init_end, init_data_size,
-		     _sinittext[0], init_code_size);
-	adj_init_size(_stext[0], _etext, codesize, _sinittext[0], init_code_size);
-	adj_init_size(_sdata[0], _edata, datasize, __init_begin[0], init_data_size);
-	adj_init_size(_stext[0], _etext, codesize, __start_rodata[0], rosize);
-	adj_init_size(_sdata[0], _edata, datasize, __start_rodata[0], rosize);
-
-#undef	adj_init_size
+    do { \
+        uintptr_t start_addr = (uintptr_t)(start); \
+        uintptr_t end_addr = (uintptr_t)(end); \
+        uintptr_t pos_addr = (uintptr_t)(pos); \
+        if (start_addr <= pos_addr && pos_addr < end_addr && size > adj) \
+            size -= adj; \
+    } while (0)
+
+    adj_init_size(__init_begin[0], __init_end, init_data_size, _sinittext[0], init_code_size);
+    adj_init_size(_stext[0], _etext, codesize, _sinittext[0], init_code_size);
+    adj_init_size(_sdata[0], _edata, datasize, __init_begin[0], init_data_size);
+    adj_init_size(_stext[0], _etext, codesize, __start_rodata[0], rosize);
+    adj_init_size(_sdata[0], _edata, datasize, __start_rodata[0], rosize);
+
+#undef  adj_init_size
 
 	pr_info("Memory: %luK/%luK available (%luK kernel code, %luK rwdata, %luK rodata, %luK init, %luK bss, %luK reserved, %luK cma-reserved"
 #ifdef	CONFIG_HIGHMEM
-- 
2.39.2

